<section>
  <h2><%= t('.heading') %></h2>

  <div>
    <div>
      <label for="poll-user-id">Id:</label>
      <%= number_field_tag('user_id', '', in: User.ids_range, id: 'poll-user-id') %>
    </div>
    <%= render partial: 'admin/users/search', locals: { target_id: 'poll-user-id' } %>
    <div class="buttons">
      <%=
        button_tag(
            t('.add_user'),
            type:  :button,
            class: 'button button-save',
            id:    'poll-user-add',
            data:  { url: users_admin_poll_path(id: entity.id) }
        )
      %>
    </div>
  </div>
</section>

<script>
    'use strict';

    const poll_user_remover = function() {
        const li = this.closest('li[data-id]');
        const url = this.getAttribute('data-url');
        const request = Biovision.new_ajax_request('delete', url, function() {
            li.remove();
        });

        request.send();
    };

    document.addEventListener('DOMContentLoaded', function () {
        const button = document.getElementById('poll-user-add');
        const input = document.getElementById('poll-user-id');
        const container = document.getElementById('poll-allowed-users');

        container.querySelectorAll('button.button-danger').forEach(function (element) {
            element.addEventListener('click', poll_user_remover);
        });

        if (button) {
            const url = button.getAttribute('data-url');
            const add_user = function () {
                const response = JSON.parse(this.responseText);

                if (response.hasOwnProperty('data')) {
                    let list = container.querySelector('ul.list-of-entities');
                    if (!list) {
                        list = document.createElement('ul');
                        list.classList.add('list-of-entities');
                        container.innerHTML = '';
                        container.append(list);
                    }

                    list.innerHTML = '';

                    response.data.forEach(function(item) {
                        const li = document.createElement('li');

                        li.setAttribute('data-id', item.id);
                        li.innerHTML = item.meta.html;
                        li.querySelector('button.button-danger').addEventListener('click', poll_user_remover);
                        list.append(li);
                    });
                }
            };

            button.addEventListener('click', function () {
                const user_id = parseInt(input.value);

                if (user_id > 0) {
                    const request = Biovision.new_ajax_request('post', url, add_user);

                    request.setRequestHeader('Content-Type', 'application/json');
                    request.send(JSON.stringify({user_id: user_id}));
                }
            });
        }
    });
</script>
